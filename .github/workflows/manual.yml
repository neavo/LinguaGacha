name: Manual Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write

    steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Check Version
      id: check_version
      shell: pwsh
      run: |
        $version = Get-Content -Path version.txt
        echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    - name: Install Requirements
      shell: cmd
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install -r requirements.txt
        python -m pip install pyinstaller
        python -m pip cache purge

    - name: Build EXE
      shell: cmd
      run: |
        python .\resource\pyinstaller.py

    - name: Copy Files
      shell: cmd
      run: |
        xcopy "resource" ".\dist\LinguaGacha\resource" /E /I /Q /H /Y
        copy "version.txt" ".\dist\LinguaGacha\"

    - name: Compress Archive
      shell: cmd
      run: |
        .\resource\7za.exe a -y -bt -mx5 LinguaGacha_${{ steps.check_version.outputs.version }}.zip .\dist\*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: MANUAL_BUILD_${{ steps.check_version.outputs.version }}
        release_name: LinguaGacha_${{ steps.check_version.outputs.version }}
        draft: true
        prerelease: false

    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./LinguaGacha_${{ steps.check_version.outputs.version }}.zip
        asset_name: LinguaGacha_${{ steps.check_version.outputs.version }}.zip
        asset_content_type: application/zip